version: "2"

services:
  mariadb:
    image: wodby/mariadb:10.1-2.3.3
    ports:
      - "${DB_DOCKER_PORT}:3306" # defines for PhpStorm connection to database.
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
#      - ./mariadb-init:/docker-entrypoint-initdb.d # Place init .sql file(s) here.
#      - /path/to/mariadb/data/on/host:/var/lib/mysql # I want to manage volumes manually.
      - ./docker-runtime/mariadb:/var/lib/mysql



  php:
# 1. Images with vanilla Drupal – wodby/drupal:[DRUPAL_VERSION]-[PHP_VERSION]-[STABILITY_TAG].
#    image: wodby/drupal:8-7.1-2.4.4
#    image: wodby/drupal:8-7.0-2.4.4
#    image: wodby/drupal:7-7.1-2.4.4
#    image: wodby/drupal:7-7.0-2.4.4
#    image: wodby/drupal:7-5.6-2.4.4
#    image: wodby/drupal:6-5.6-2.4.4
#    image: wodby/drupal:6-5.3-2.4.4
# 2. Images without Drupal – wodby/drupal-php:[PHP_VERSION]-[STABILITY_TAG].
#    image: wodby/drupal-php:7.1-2.4.3
#    image: wodby/drupal-php:7.0-2.4.3
    image: wodby/drupal-php:5.6-2.4.3
#    image: wodby/drupal-php:5.3-2.4.3
    environment:
      PHP_SENDMAIL_PATH: /usr/sbin/sendmail -t -i -S mailhog:1025
      DB_HOST: mariadb
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_DRIVER: mysql
      PHP_XDEBUG: 1
      PHP_XDEBUG_DEFAULT_ENABLE: 1
      PHP_MAX_EXECUTION_TIME: 60
      PHP_MEMORY_LIMIT: 1024M
      # PHP_XDEBUG_REMOTE_CONNECT_BACK: 0         # This is needed to respect remote.host setting bellow
      # PHP_XDEBUG_REMOTE_HOST: "10.254.254.254"  # You will also need to 'sudo ifconfig lo0 alias 10.254.254.254'
    volumes:
      - ./web:/var/www/html
# Options for macOS users (http://docs.docker4drupal.org/en/latest/macos)
#      - ./web:/var/www/html:cached # User-guided caching
#      - docker-sync:/var/www/html # Docker-sync



  nginx:
# wodby/drupal-nginx:[DRUPAL_VERSION]-[NGINX_VERSION]-[STABILITY_TAG].
    image: wodby/drupal-nginx:8-1.13-2.4.2
#    image: wodby/drupal-nginx:7-1.13-2.4.2
#    image: wodby/drupal-nginx:6-1.13-2.4.2
#    image: wodby/drupal-nginx:8-1.12-2.4.2
#    image: wodby/drupal-nginx:7-1.12-2.4.2
#    image: wodby/drupal-nginx:6-1.12-2.4.2
    depends_on:
      - php
    environment:
      NGINX_STATIC_CONTENT_OPEN_FILE_CACHE: "off"
      NGINX_ERROR_LOG_LEVEL: debug
      NGINX_BACKEND_HOST: php
      NGINX_SERVER_ROOT: /var/www/html
    volumes:
      - ./web:/var/www/html
# Options for macOS users (http://docs.docker4drupal.org/en/latest/macos)
#      - ./web:/var/www/html:cached # User-guided caching
#      - docker-sync:/var/www/html # Docker-sync
    labels:
      - "traefik.backend=${PROJECT_SUFFIX}_nginx_1"
      - "traefik.port=80"
      # For multiple hosts (Drupal MultiSiting)
      - "traefik.frontend.rule=HostRegexp:${PROJECT_NAME}.web.docker.localhost, {subdomain:[A-Za-z0-9-]+}.${PROJECT_NAME}.web.docker.localhost"



#  apache:
#    image: wodby/drupal-apache:2.4-1.0.2
#    depends_on:
#      - php
#    environment:
#      APACHE_LOG_LEVEL: debug
#      APACHE_BACKEND_HOST: php
#      APACHE_SERVER_ROOT: /var/www/html
#    volumes:
#      - ./web:/var/www/html
## Options for macOS users (http://docs.docker4drupal.org/en/latest/macos)
##      - ./web:/var/www/html:cached # User-guided caching
##      - docker-sync:/var/www/html # Docker-sync
#    labels:
#      - "traefik.backend=${PROJECT_SUFFIX}_apache_1"
#      - "traefik.port=80"
#      # For multiple hosts (Drupal MultiSiting)
#      - "traefik.frontend.rule=HostRegexp:${PROJECT_NAME}.web.docker.localhost, {subdomain:[A-Za-z0-9-]+}.${PROJECT_NAME}.web.docker.localhost"



#  varnish:
#    image: wodby/drupal-varnish:4.1-2.1.2
#    depends_on:
#      - nginx
#    environment:
#      VARNISH_SECRET: secret
#      VARNISH_BACKEND_HOST: nginx
#      VARNISH_BACKEND_PORT: 80
#    labels:
#      - "traefik.backend=${PROJECT_SUFFIX}_varnish_1"
#      - "traefik.port=6081"
#      - "traefik.frontend.rule=Host:${PROJECT_NAME}.varnish.docker.localhost"



#  redis:
#    image: wodby/redis:3.2-2.1.2



#  adminer:
#    image: wodby/adminer:4.3-1.1.0
#    environment:
#      ADMINER_SALT: adminer-salt
#    labels:
#      - 'traefik.backend=${PROJECT_SUFFIX}_adminer_1'
#      - 'traefik.port=9000'
#      - 'traefik.frontend.rule=Host:${PROJECT_NAME}.adminer.docker.localhost'



#  pma:
#    image: phpmyadmin/phpmyadmin
#    environment:
#      PMA_HOST: mariadb
#      PMA_USER: ${DB_USER}
#      PMA_PASSWORD: ${DB_PASSWORD}
#      PHP_UPLOAD_MAX_FILESIZE: 1G
#      PHP_MAX_INPUT_VARS: 1G
#    labels:
#      - "traefik.backend=${PROJECT_SUFFIX}_pma_1"
#      - "traefik.port=80"
#      - "traefik.frontend.rule=Host:${PROJECT_NAME}.pma.docker.localhost"



#  solr: # admin configs in SearchApi: http://solr:8000/solr/{core_name}
## wodby/drupal-solr:[DRUPAL_VERSION]-[SOLR_VERSION]-[STABILITY_TAG].
##    image: wodby/drupal-solr:8-6.6-2.2.0
##    image: wodby/drupal-solr:8-6.5-2.2.0
##    image: wodby/drupal-solr:8-6.4-2.2.0
##    image: wodby/drupal-solr:8-6.3-2.2.0
##    image: wodby/drupal-solr:8-5.5-2.2.0
#    image: wodby/drupal-solr:7-5.4-2.2.0
#    environment:
#      SOLR_HEAP: 1024m
#    labels:
#      - "traefik.backend=${PROJECT_SUFFIX}_solr_1"
#      - "traefik.port=8983"
#      - "traefik.frontend.rule=Host:${PROJECT_NAME}.solr.docker.localhost"
#    volumes:
#      - ./docker-runtime/solr:/opt/solr/server/solr/



  mailhog:
    image: mailhog/mailhog
    labels:
      - "traefik.backend=${PROJECT_SUFFIX}_mailhog_1"
      - "traefik.port=8025"
      - "traefik.frontend.rule=Host:${PROJECT_NAME}.mailhog.docker.localhost"



#  nodejs:
#    image: wodby/drupal-node:1.0-1.0.0
#    environment:
#       NODE_SERVICE_KEY: node-service-key
#    labels:
#      - 'traefik.backend=${PROJECT_SUFFIX}_nodejs_1'
#      - 'traefik.port=8080'
#      - 'traefik.frontend.rule=Host:${PROJECT_NAME}.nodejs.docker.localhost'
#    volumes:
#      - ./docker-runtime/nodejs:/app
#    command: sh -c 'npm install && npm run start'



#  node:
#    image: node:alpine
#    working_dir: /app
#    labels:
#      - "traefik.backend=${PROJECT_SUFFIX}_node_1"
#      - "traefik.port=3000"
#      - "traefik.frontend.rule=Host:${PROJECT_NAME}.front.docker.localhost"
#    expose:
#      - "3000"
#    volumes:
#      - ./docker-runtime/node:/app
#    command: sh -c 'npm install && npm run start'



#  memcached:
#    image: wodby/memcached:1.4-2.0.0



#  rsyslog:
#    image: wodby/rsyslog



#  athenapdf:
#    image: arachnysdocker/athenapdf-service
#    environment:
#      WEAVER_AUTH_KEY: weaver-auth-key
#      WEAVER_ATHENA_CMD: "athenapdf -S"
#      WEAVER_MAX_WORKERS: 10
#      WEAVER_MAX_CONVERSION_QUEUE: 50
#      WEAVER_WORKER_TIMEOUT: 90
#      WEAVER_CONVERSION_FALLBACK: false



#  traefik:
#   image: traefik
#   command: -c /dev/null --web --docker --logLevel=INFO
#   ports:
#     - "8000:80"
#  #      - '8080:8080' # Dashboard
#   volumes:
#     - /var/run/docker.sock:/var/run/docker.sock
#   labels:
#     - "traefik.backend=${PROJECT_SUFFIX}_traefik_1"
#     - "traefik.port=8080"
#     - "traefik.frontend.rule=Host:${PROJECT_NAME}.traefik.docker.localhost"





volumes:
  codebase:
## Docker-sync for macOS users
#  docker-sync:
#    external: true
